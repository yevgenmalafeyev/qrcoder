generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Author {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  isActive  Boolean  @default(true)
  books     Book[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Book {
  id          String   @id @default(cuid())
  title       String
  isbn        String?  @unique
  description String?
  authorId    String
  author      Author   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  qrCodes     QrCode[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([authorId])
}

model QrCode {
  id          String     @id @default(cuid())
  name        String
  type        QrCodeType
  content     String
  bookId      String
  book        Book       @relation(fields: [bookId], references: [id], onDelete: Cascade)
  scans       QrScan[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@index([bookId])
}

model QrScan {
  id        String   @id @default(cuid())
  qrCodeId  String
  qrCode    QrCode   @relation(fields: [qrCodeId], references: [id], onDelete: Cascade)
  userAgent String?
  ipAddress String?
  country   String?
  city      String?
  scannedAt DateTime @default(now())

  @@index([qrCodeId])
  @@index([scannedAt])
}

enum QrCodeType {
  URL
  VIDEO
  TEXT
  IMAGE
}